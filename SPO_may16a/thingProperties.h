// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "ec66621d-d6cb-4613-be1c-8417962cf78b";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onMessageTextChange();
void onHumidityChange();
void onPaymentAmountChange();
void onTemperatureChange();
void onDistanceCm1Change();
void onOccupancyPercentChange();
void onParkedDurationChange();
void onParkedStatusChange();
void onServoControlChange();

String messageText;
float dailyIncome;
float distanceCm2;
float humidity;
float paymentAmount;
float temperature;
int distanceCm1;
int lastParkDuration;
int occupancyPercent;
int parkedDuration;
int parkedDuration2;
int vehicleCount;
bool parkedStatus;
bool servoControl;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(messageText, READWRITE, ON_CHANGE, onMessageTextChange);
  ArduinoCloud.addProperty(dailyIncome, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(distanceCm2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(humidity, READWRITE, ON_CHANGE, onHumidityChange);
  ArduinoCloud.addProperty(paymentAmount, READWRITE, ON_CHANGE, onPaymentAmountChange);
  ArduinoCloud.addProperty(temperature, READWRITE, ON_CHANGE, onTemperatureChange);
  ArduinoCloud.addProperty(distanceCm1, READWRITE, ON_CHANGE, onDistanceCm1Change);
  ArduinoCloud.addProperty(lastParkDuration, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(occupancyPercent, READWRITE, ON_CHANGE, onOccupancyPercentChange);
  ArduinoCloud.addProperty(parkedDuration, READWRITE, ON_CHANGE, onParkedDurationChange);
  ArduinoCloud.addProperty(parkedDuration2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(vehicleCount, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(parkedStatus, READWRITE, ON_CHANGE, onParkedStatusChange);
  ArduinoCloud.addProperty(servoControl, READWRITE, ON_CHANGE, onServoControlChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
